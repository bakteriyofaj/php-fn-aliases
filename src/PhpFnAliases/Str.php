<?php

namespace BakteriyoFaj\PhpFnAliases;

class Str extends PhpMethodCaller
{
   const AddCSlashes             = "addcslashes";                // Quote string with slashes in a C style
   const AddSlashes              = "addslashes";                 // Quote string with slashes
   const BinToHex                = "bin2hex";                    // Convert binary data into hexadecimal representation
   const Chop                    = "chop";                       // Alias of rtrim
   const Chr                     = "chr";                        // Generate a single-byte string from a number
   const ChunkSplit              = "chunk_split";                // Split a string into smaller chunks
   const ConvertCyrString        = "convert_cyr_string";         // Convert from one Cyrillic character set to another
   const ConvertUudecode         = "convert_uudecode";           // Decode a uuencoded string
   const ConvertUuencode         = "convert_uuencode";           // Uuencode a string
   const CountChars              = "count_chars";                // Return information about characters used in a string
   const Crc32                   = "crc32";                      // Calculates the crc32 polynomial of a string
   const Crypt                   = "crypt";                      // One-way string hashing
   const Explode                 = "explode";                    // Split a string by a string
   const FPrintF                 = "fprintf";                    // Write a formatted string to a stream
   const GetHtmlTranslationTable = "get_html_translation_table"; // Returns the translation table used by htmlspecialchars and htmlentities
   const Hebrev                  = "hebrev";                     // Convert logical Hebrew text to visual text
   const Hebrevc                 = "hebrevc";                    // Convert logical Hebrew text to visual text with newline conversion
   const HexToBin                = "hex2bin";                    // Decodes a hexadecimally encoded binary string
   const HtmlEntityDecode        = "html_entity_decode";         // Convert HTML entities to their corresponding characters
   const HtmlEntities            = "htmlentities";               // Convert all applicable characters to HTML entities
   const HtmlSpecialCharsDecode  = "htmlspecialchars_decode";    // Convert special HTML entities back to characters
   const HtmlSpecialChars        = "htmlspecialchars";           // Convert special characters to HTML entities
   const Implode                 = "implode";                    // Join array elements with a string
   const Join                    = "join";                       // Alias of implode
   const LcFirst                 = "lcfirst";                    // Make a string's first character lowercase
   const Levenshtein             = "levenshtein";                // Calculate Levenshtein distance between two strings
   const LocaleConv              = "localeconv";                 // Get numeric formatting information
   const Ltrim                   = "ltrim";                      // Strip whitespace (or other characters) from the beginning of a string
   const MD5File                 = "md5_file";                   // Calculates the md5 hash of a given file
   const MD5                     = "md5";                        // Calculate the md5 hash of a string
   const MetaPhone               = "metaphone";                  // Calculate the metaphone key of a string
   const MoneyFormat             = "money_format";               // Formats a number as a currency string
   const NlLangInfo              = "nl_langinfo";                // Query language and locale information
   const Nl2Br                   = "nl2br";                      // Inserts HTML line breaks before all newlines in a string
   const NumberFormat            = "number_format";              // Format a number with grouped thousands
   const Ord                     = "ord";                        // Convert the first byte of a string to a value between 0 and 255
   const ParseString             = "parse_str";                  // Parses the string into variables
   const Printf                  = "printf";                     // Output a formatted string
   const QuotedPrintableDecode   = "quoted_printable_decode";    // Convert a quoted-printable string to an 8 bit string
   const QuotedPrintableEncode   = "quoted_printable_encode";    // Convert a 8 bit string to a quoted-printable string
   const Quotemeta               = "quotemeta";                  // Quote meta characters
   const Rtrim                   = "rtrim";                      // Strip whitespace (or other characters) from the end of a string
   const SetLocale               = "setlocale";                  // Set locale information
   const Sha1File                = "sha1_file";                  // Calculate the sha1 hash of a file
   const Sha1                    = "sha1";                       // Calculate the sha1 hash of a string
   const SimilarText             = "similar_text";               // Calculate the similarity between two strings
   const Soundex                 = "soundex";                    // Calculate the soundex key of a string
   const Sprintf                 = "sprintf";                    // Return a formatted string
   const Sscanf                  = "sscanf";                     // Parses input from a string according to a format
   const GetCSV                  = "str_getcsv";                 // Parse a CSV string into an array
   const IReplace                = "str_ireplace";               // Case-insensitive version of str_replace
   const Pad                     = "str_pad";                    // Pad a string to a certain length with another string
   const Repeat                  = "str_repeat";                 // Repeat a string
   const Replace                 = "str_replace";                // Replace all occurrences of the search string with the replacement string
   const Rot13                   = "str_rot13";                  // Perform the rot13 transform on a string
   const Shuffle                 = "str_shuffle";                // Randomly shuffles a string
   const Split                   = "str_split";                  // Convert a string to an array
   const WordCount               = "str_word_count";             // Return information about words used in a string
   const CaseCmp                 = "strcasecmp";                 // Binary safe case-insensitive string comparison
   const Char                    = "strchr";                     // Find the first occurrence of a string
   const Comparison              = "strcmp";                     // Binary safe string comparison
   const Coll                    = "strcoll";                    // Locale based string comparison
   const Cspn                    = "strcspn";                    // Find length of initial segment not matching mask
   const IpTags                  = "strip_tags";                 // Strip HTML and PHP tags from a string
   const IpCSlashes              = "stripcslashes";              // Un-quote string quoted with addcslashes
   const Ipos                    = "stripos";                    // Find the position of the first occurrence of a case-insensitive substring in a string
   const IpSlashes               = "stripslashes";               // Un-quotes a quoted string
   const Istr                    = "stristr";                    // Case-insensitive strstr
   const Length                  = "strlen";                     // Get string length
   const NatCaseCmp              = "strnatcasecmp";              // Case insensitive string comparisons using aconst "natural order";algorithm
   const NatCmp                  = "strnatcmp";                  // String comparisons using aconst "natural order";algorithm
   const NCaseCmp                = "strncasecmp";                // Binary safe case-insensitive string comparison of the first n characters
   const Ncmp                    = "strncmp";                    // Binary safe string comparison of the first n characters
   const Pbrk                    = "strpbrk";                    // Search a string for any of a set of characters
   const Position                = "strpos";                     // Find the position of the first occurrence of a substring in a string
   const RChr                    = "strrchr";                    // Find the last occurrence of a character in a string
   const Reverse                 = "strrev";                     // Reverse a string
   const Ripos                   = "strripos";                   // Find the position of the last occurrence of a case-insensitive substring in a string
   const Rpos                    = "strrpos";                    // Find the position of the last occurrence of a substring in a string
   const Spn                     = "strspn";                     // Finds the length of the initial segment of a string consisting entirely of characters contained within a given mask
   const Token                   = "strtok";                     // Tokenize string
   const ToLower                 = "strtolower";                 // Make a string lowercase
   const ToUpper                 = "strtoupper";                 // Make a string uppercase
   const Tr                      = "strtr";                      // Translate characters or replace substrings
   const SubStringCompare        = "substr_compare";             // Binary safe comparison of two strings from an offset, up to length characters
   const SubStringCount          = "substr_count";               // Count the number of substring occurrences
   const SubStringReplace        = "substr_replace";             // Replace text within a portion of a string
   const SubString               = "substr";                     // Return part of a string
   const Trim                    = "trim";                       // Strip whitespace (or other characters) from the beginning and end of a string
   const UcFirst                 = "ucfirst";                    // Make a string's first character uppercase
   const UcWords                 = "ucwords";                    // Uppercase the first character of each word in a string
   const Vfprintf                = "vfprintf";                   // Write a formatted string to a stream
   const Vprintf                 = "vprintf";                    // Output a formatted string
   const Vsprintf                = "vsprintf";                   // Return a formatted string
   const WordWrap                = "wordwrap";                   // Wraps a string to a given number of characters    
}